"""Initial migration

Revision ID: f00e591b1b47
Revises: 
Create Date: 2025-04-19 04:52:31.601680

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f00e591b1b47'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('companies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nit', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('contact', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    with op.batch_alter_table('companies', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_companies_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_companies_nit'), ['nit'], unique=True)

    op.create_table('municipalities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('divipola_code', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('municipalities', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_municipalities_divipola_code'), ['divipola_code'], unique=True)
        batch_op.create_index(batch_op.f('ix_municipalities_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_municipalities_name'), ['name'], unique=True)

    op.create_table('projects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('logo', sa.String(length=500), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('municipality_divipola', sa.String(length=100), nullable=False),
    sa.Column('company_nit', sa.String(length=100), nullable=False),
    sa.Column('address', sa.String(length=255), nullable=True),
    sa.Column('contact', sa.String(length=255), nullable=True),
    sa.Column('area', sa.Float(), nullable=True),
    sa.Column('price', sa.Integer(), nullable=True),
    sa.Column('type', sa.String(length=100), nullable=True),
    sa.Column('img_url', sa.String(length=500), nullable=True),
    sa.Column('url_website', sa.String(length=255), nullable=True),
    sa.Column('slug', sa.String(length=255), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('avg', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint('area >= NULL', name='min_float_check'),
    sa.CheckConstraint('price >= NULL', name='min_integer_check'),
    sa.ForeignKeyConstraint(['company_nit'], ['companies.nit'], ),
    sa.ForeignKeyConstraint(['municipality_divipola'], ['municipalities.divipola_code'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('projects', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_projects_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_projects_slug'), ['slug'], unique=True)

    op.create_table('project_users_qualifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_ref', sa.String(length=255), nullable=False),
    sa.Column('project_ref', sa.String(length=255), nullable=False),
    sa.Column('qualification', sa.Float(), nullable=False),
    sa.CheckConstraint('qualification >= 0', name='min_float_check'),
    sa.ForeignKeyConstraint(['project_ref'], ['projects.slug'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_ref', 'project_ref', name='uq_user_project_qualification')
    )
    with op.batch_alter_table('project_users_qualifications', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_project_users_qualifications_id'), ['id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('project_users_qualifications', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_project_users_qualifications_id'))

    op.drop_table('project_users_qualifications')
    with op.batch_alter_table('projects', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_projects_slug'))
        batch_op.drop_index(batch_op.f('ix_projects_id'))

    op.drop_table('projects')
    with op.batch_alter_table('municipalities', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_municipalities_name'))
        batch_op.drop_index(batch_op.f('ix_municipalities_id'))
        batch_op.drop_index(batch_op.f('ix_municipalities_divipola_code'))

    op.drop_table('municipalities')
    with op.batch_alter_table('companies', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_companies_nit'))
        batch_op.drop_index(batch_op.f('ix_companies_id'))

    op.drop_table('companies')
    # ### end Alembic commands ###
